// نمونه ۱: دو نتیجه
var (users, orders) = executor.ExecuteMultiResultStoredProcedure(
    "usp_GetUserOrders",
    gr => (gr.Read<User>(), gr.Read<Order>()),
    new { UserId = 123 }
);

// نمونه ۲: سه نتیجه
var result = executor.ExecuteMultiResultStoredProcedure(
    "usp_GetDashboardData",
    gr => new {
        Users = gr.Read<User>(),
        Orders = gr.Read<Order>(),
        Stats = gr.Read<DashboardStats>().FirstOrDefault()
    },
    new { Year = 2023 }
);

// نمونه Async
var data = await executor.ExecuteMultiResultStoredProcedureAsync(
    "usp_GetReports",
    async gr => (
        await gr.ReadAsync<SalesReport>(),
        await gr.ReadAsync<InventoryReport>()
    ),
    new { Region = "North" }
);

//نمونه OuterApply
var query = SQL.QueryBuilder<Person>()
.InnerJoin<Person, Party>((x, p) => x.PARTY_ID == p.PartyId)
.OuterApply<Party>(
    (x, p) => x.PARTY_ID == p.PartyId,
    subQuery => subQuery.Where(a => a.PartyId == 117))
.Where(x => x.PARTY_ID == 117 && x.CurrentFirstName.Contains("م"))
.Execute();

// استفاده از تابع اسکالر
var result = await repository.ExecuteScalarFunctionAsync<int>(
    "CalculateSum", 
    new { Num1 = 5, Num2 = 10 }
);

// استفاده از توابع جدولی
var result = await executor.ExecuteTableFunctionAsync<User>(
    "GetActiveUsers",
    new {
        MinAge = 18,
        MaxSalary = 5000.00m,
        IsActive = true,
        JoinDate = DateTime.Now.AddYears(-1)
    }
);

// نمونه بدون پارامتر
var allItems = await executor.ExecuteTableFunctionAsync<Item>("GetAllItems");

//توابع اسکالر
var balance = await executor.ExecuteScalarFunctionAsync<double>(
    "GetUserAccountBalance",
    new { UserId = 123, Currency = "USD" }
);

//اضافه کردن شرطها در انتها
var oExpressions = new List<Expression<Func<Person, bool>>>();
oExpressions.Add(x => x.PARTY_ID == 2);
oExpressions.Add(x=> x.IdNumber == "450");
var Query = SQL.Query<Person>();
foreach (var oExpression in oExpressions)
{
    Query = Query.Where(oExpression);
}
var result = Query.Execute();

